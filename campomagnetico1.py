# -*- coding: utf-8 -*-
"""campoMagnetico1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_DOP64bdHP9gNXeZkYthMb41X9iabTjl
"""

import numpy as np
import matplotlib.pyplot as plt
plt.style.use('ggplot')


# In[6]:


mu_0 = 4*np.pi*10**-7


# In[7]:


#r0 es la posicion
r0 = [0.3,-0.1]

#m :momento: es la magnitud y direccion, es el potencial de de un iman para crear un CM, es como la intensidad de un magneto, 
#no cambia, solo de donde lo midas, esa posicion se obtine del producto punto
m = [0,0.1]


# In[71]:


#Parametros del Grid
N = 20
grid_min = -1
grid_max = 1


# In[72]:


#Grids
x = np.linspace(grid_min,grid_max,N)
y = np.linspace(grid_min,grid_max,N)
X,Y = X, Y = np.meshgrid(x,y)


# In[73]:

#Matrices donde se graficara el campo, tomando en cuenta el dípolo
X_disp = X -r0[0]
Y_disp = Y - r0[1]



#Ecuacion dividida en partes-------------------------------------
#constante
const = mu_0/(4*np.pi)

#magnitud para sacar componentes unitarios de r
mag_XY = np.sqrt((X_disp**2) + (Y_disp**2))

#Son los componentes en x y y del vector unitario r
X_unit = X_disp/mag_XY
Y_unit = Y_disp/mag_XY

# r de distancia (no r unitario)
r = mag_XY


#productos punto de del momento (m) en x y y
m_dot_R = m[0]*X_unit + m[1]*Y_unit

m_dot_R.shape


#componente del CM en x y Y
B_x = const*(3*X_unit*m_dot_R -m[0])/r**3

B_y = const*(3*Y_unit*m_dot_R -m[1])/r**3

#Magnitud total del campo
mag_B = np.sqrt((B_x**2) + (B_y**2))




plt.figure(figsize=(16,8))

#grafica de vectores
plt.subplot(1,2,1)
plt.quiver(x,x,B_x/mag_B,B_y/mag_B)
plt.title('Vectores Unitarios del Campo Magnético')

#grafica de lineas de campo
plt.subplot(1,2,2)
plt.streamplot(X,Y,B_x,B_y)
plt.title('Lineas de trayectoria del campo Magnético')


# Grafica de las dos de arriba juntas

plt.figure(figsize=(10,10))

plt.quiver(x,x,B_x/mag_B,B_y/mag_B)
plt.streamplot(X,Y,B_x,B_y)
plt.title('Vectores Unitarios y líneas de trayectoria del Campo Magnético')